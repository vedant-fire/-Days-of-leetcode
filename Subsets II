class Solution {
public:
    void printf(int i,vector<int>& ds,vector<int>& nums,int n,set<vector<int>>& ans){
        if(i==n) {
            ans.insert(ds);
            return;
        }
        ds.push_back(nums[i]);
        printf(i+1,ds,nums,n,ans);
        ds.pop_back();
        printf(i+1,ds,nums,n,ans);
    }
    vector<vector<int>> subsetsWithDup(vector<int>& nums) {

        
        int n=nums.size();
        vector<int> ds;
        set<vector<int>> ans1;
        vector < vector < int >> ans;
        printf(0,ds,nums,n,ans1);
        for (auto it = ans1.begin(); it != ans1.end(); it++) {
            ans.push_back( * it);
        }

    

       
        

       
  
        return ans;
        
        
        
    }
};
